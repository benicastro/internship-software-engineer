<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEACAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABAAAAAAAAAAAAAAAAEAAAAB
        AABMcEcA++GpAPrgqQD64KkA+uCpAPvhqQD64KkAVjAWAPXcpwD64KkA+uCpAPrgqQD64KkA+uCpAPvh
        qQD44KgA+uCpAPriqwD64akA++KrAPvjqwD536gA+uCpAPrirQA/Hw0AVi8VAFYwFQBULRMATSkTAH1e
        PwBKJhEAk3RRAEQtGgDew5EAZUQoALuidwAICAUArJNsANi9jACKcVAAWTMZAAEBAQAFBQMADAsHAHZV
        NwD64KkAUysQAP/mrQAGBgMATSIFAAAAAADIr4IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDAEAAAgXEw0NDRMRCAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQtCwkCLS0tLS0tLRUMEAYEFwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAAAAAAAAAADxAtLS0tLS0tLS0VFS0tLS0tLRUFFAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwQAAAAAAAgBFi0tLS0tLQsWBQQOBQwtLS0tLS0t
        LS0WBAgUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATBggAAAMCLS0tLQkBFBMNCi0tLS0tLS0t
        LS0tLS0tLRYWLQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEKEgwtLS0tLQ4IABILLS0tLS0t
        BQMSEgwtLS0tLS0tLS0tCQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACi0tLS0VDgAAAy0tLS0V
        BQQIBAkSARYtLS0MBQMQLS0tLS0WDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXCS0tLS0FCAASAi0t
        LRYDEQAAAAAGLS0tDAMNAAAAAgIUFi0tFgkEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATFi0tLQsECQEL
        LS0MBQEIAAAAAA8WLS0LBS0OCAAADS0BAA8MAS0FChIAAAAAAAAAAAAAAAAAAAAAAAAAAAANLS0tLQoA
        AAMtLQoRAAAAAAAAAA4tLRUSAAANCS0GEwwMAAANLREKLQEDAQAAAAAAAAAAAAAAAAAAAAAAAAAULS0t
        LQEAAAotCRIQFAAAAAAACAUtLRARAAAAAAAPCS0tAQAAFy0DAAYtExIBAAAAAAAAAAAAAAAAAAAAAAAT
        FS0tLQQAAAUtBgAACAoOAAAAFwwtLQMAAAAAAAAAAAAOLS0KEwALCQAABQsABBIAAAAAAAAAAAAAAAAA
        AAAXAi0tLQQAAAUtEgAAAAAADwUNEwItLQQAAAAAAAAAAAAADA8RCi0QCy0AAAACDgAEFAAAAAAAAAAA
        AAAAAAAACS0tLQEAAAYtDwAAAAAAABMRCi0MFg8AAAAAAAAAAAAABAsAAAARBi0tBg0AFC0RAA8IAAAA
        AAAAAAAAAAAABi0tFQoAAAEtBAAAAAAAAAAADy0MLQMAAAAAAAAAAAAAAAwPAAAAAAAIAy0tCxIQEgAA
        AAAAAAAAABEIAAAADy0tLQsAABQtAwAAAAAAAAAAEQIMCQoKChMAAAAAAAAAAA8QAAAAAAAAAAAOBAkt
        LS0JBg8IAAAAAAAADREAAAItLS0TAAgCCQAAAAAAAAAACAwtChIAEhACBhEAAAAAAAAGDQAAAAAAAAAA
        AwAADQYtLS0tAgQAAAAAAAAPFAMtLS0DAAAKLREAAAAAAAAAABAtBgYAAAAXDgItBREAAAAIBgAAAAAA
        AAAAAAQRAAAAEQkFLS0FAAAAAAAAAAQtLQwLAAAPLQ4AAAAAAAAAAAMtBQoAAAAAAAANBS0tChMAARMA
        AAAAAAAAAAAPFAAAAAAGAAgEFwAAAAAAAAAELRUMEgAACxUXAAAAAAAAABQtDAYTAAAAAAAAAAAPFi0t
        BQ4AAAAAAAAAAAAADQQAAAAAAREAAAAAAAAAAAAACi0KEAEBAy0GAAAAAAAAAAAMLQESAAAAAAAAAAAA
        AAABFS0tBRMAAAAAAAAAABEDAAAAABQPAAAAAAAAAAAACBYtARQXAS0tEQAAAAAAAAAOLQYSAAAAAAAA
        AAAAAAAAAAgJLS0tBQ0AAAAAAAAUBgAAAAAXAQAAAAAAAAAAAA8tCQQAAA8tFQMXAAAAAAAXLRYTDQAA
        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
        FC0NAAAAAAAABBUUAAAADwsAAAAAAAAAAAAAAAATLS0tLS0BEy0tEgAAAAAAAA4tLRMAAAMVLQICDAEI
        AAAAEy0OAAAAAAAAEgwGAAAAFxURAAAAAAAAAAAAAAAAAAEtLS0tLQwtLQUAAAAAAAAQLQkAAAAAAAEM
        LS0tLQYNDRUJAAAAAAAABC0MAAAAAAkBAAAAAAAAAAAAAAAAAAAABS0tLS0LFS0CAAAAAAAULS0EAAAA
        AAAAAAQJLS0tLS0tAwAAAAAAFC0tEwAAAAoFAAAAAAAAAAAAAAAAAAAAAAgLLS0tCwEtLRUOEQAADC0V
        AAAAAAAAAAAAABEJLS0tCQoJBhQAFC0tDwAAAAMLAAAAAAAAAAAAAAAAAAAAAAAAEQItLS0KAi0CLS0K
        BS0tBgAAAAAAAAAAAAAEFS0MCS0tEAYFCRUtBAAAAAECCAAAAAAAAAAAAAAAAAAAAAAAAAANLS0tLRUt
        Ag0GLS0tLRMAAAAAAAAAAAADLS0LEQANDgItCy0CCQ4OFAMCEQAAAAAAAAAAAAAAAAAAAAAAAAAAABQV
        LS0tLS0DAA4tLS0WAQgAAAAAAAgKLS0FAAAAAAAAEC0tLRAGCS0tBgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAADQItLS0tAgAKLS0JLS0CAxcAAAQWLS0BAAAAAAATEC0QEQQFLS0tEAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAARDC0tLS0DCy0VCBEGLS0CDgUtLQwNAAAAAAgOLS0KAAAADi0OCgkXAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGLS0tLS0tBgAAABEJLS0tLQoAAAAAEw4tLQwPAAgDLQwNAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAA8LLS0tLQoSDhACLS0CCy0tCwMBCS0tEAQAEwYtLQMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABItLS0tLS0tLS0VCgYCLS0tLS0MDw0DCy0tDhcAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAILS0JFi0tFS0tLS0tLS0tLS0tLS0tLRAPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAktCAAUAQoJCwItLS0tAgwJCgktLS0TAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBAAAAAAAAAAICBcXCAgAAAAAEw4L
        CAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///jAH////////AAA/////9/wAAA/////z4AAAAP////jAAAAA
        f////ABAAAAf///+AwAAAA////gEA8BwB///8AAPAGID///gYP4MBgH//8DA+B8GIP//gYxwf8Eyf/8D
        HwD/wDk//wY/Af+cCJ/+DH+D/58A/5wY/wD/P8APzBH+CD8/2AfgMf4cDn/OB/Bj/D8Cf89H8GP4P8D/
        zz/wB/h/8D/PP+AH8P/4D88/4YPg//gDz7/hgeP/+YBPv8MIR//z4A+fwR4B/xMAAInAHgH+BAAAhcAe
        AfwAAAAMwB4A+Ah/CADEHhAwAP8IAIQ+EAER/wiABh4RgxHACIwCHhGAEcAIhAAOEQARwBiIAA4QGAD/
        GIACBBA+AH8YgEIAEHwAABiAQgAQ/AAAOATgIBH4HAA4DOAYf/j/AH854Rw/+f/AHjngHA/x//gCefAc
        AeH/+ABz8AxgY//xwAPwDHgD/+H4APAMfAf/4/kA/AR/Af/D+c/8BH+Af+fjz/4EPwAfx+Of/gA/DAOP
        xx//AD8fAB+PP/+APh/AHw5//4AGP/ACHP//wAA/8AA4///gAD/ggAH///AID4PwA///+AgDB8AD///8
        AAAPBwP///8A4DwIP////4AAACD/////4AAAAf/////gAAAP//////EAAB//////8/geH///
</value>
  </data>
</root>